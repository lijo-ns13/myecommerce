<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Verify OTP</title>

    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet" />
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
      rel="stylesheet" />
    <style>
    :root {
      --primary-color: #4f46e5;
      --primary-dark: #4338ca;
      --error-color: #ef4444;
      --success-color: #22c55e;
    }

    body {
      background: #f5f7fb;
      min-height: 100vh;
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,
        Ubuntu, Cantarell, sans-serif;
    }

    .otp-container {
      min-height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 1rem;
    }

    .otp-box {
      max-width: 400px;
      width: 100%;
      background: white;
      padding: 2.5rem;
      border-radius: 24px;
      box-shadow: 0 10px 40px rgba(0, 0, 0, 0.08);
    }

    .otp-header {
      text-align: center;
      margin-bottom: 1.5rem;
    }

    .otp-header h2 {
      margin-bottom: 0.5rem;
    }

    .form-floating {
      margin-bottom: 1.5rem;
    }

    .form-floating > .form-control {
      padding: 1rem;
      height: 3.5rem;
      border: 2px solid #e5e7eb;
      border-radius: 12px;
      transition: all 0.2s ease;
    }

    .form-floating > .form-control:focus {
      border-color: var(--primary-color);
      box-shadow: 0 0 0 4px rgba(79, 70, 229, 0.1);
    }

    .btn {
      padding: 0.75rem 1.5rem;
      border-radius: 12px;
      font-weight: 600;
      transition: all 0.2s ease;
    }

    .btn-primary {
      background: var(--primary-color);
      border: none;
    }

    .btn-primary:hover {
      background: var(--primary-dark);
      transform: translateY(-1px);
    }

    .btn-outline-primary {
      border-color: var(--primary-color);
      color: var(--primary-color);
    }

    .btn-outline-primary:hover {
      background: var(--primary-color);
      color: white;
    }

    .timer-text {
      text-align: center;
      color: #6b7280;
      margin-bottom: 1rem;
    }

    #error {
      color: var(--error-color);
      background: #fef2f2;
      border: 1px solid #fee2e2;
      padding: 1rem;
      border-radius: 12px;
      margin-bottom: 1.5rem;
      display: none;
    }

    #error.show {
      display: block;
      animation: shake 0.5s ease-in-out;
    }

    .success-message {
      color: var(--success-color);
      background: #f0fdf4;
      border: 1px solid #dcfce7;
      padding: 1rem;
      border-radius: 12px;
      margin-bottom: 1.5rem;
      display: none;
    }

    .success-message.show {
      display: block;
      animation: slideDown 0.3s ease-out;
    }

    @keyframes shake {
      0%, 100% { transform: translateX(0); }
      25% { transform: translateX(-5px); }
      75% { transform: translateX(5px); }
    }

    @keyframes slideDown {
      from { opacity: 0; transform: translateY(-10px); }
      to { opacity: 1; transform: translateY(0); }
    }
  </style>
  </head>
  <body>
    <div class="otp-container">
      <div class="otp-box">
        <div class="otp-header">
          <h2>Verify OTP</h2>
          <p class="text-muted">Enter the OTP sent to your email address.</p>
        </div>

        <div id="error">
          <i class="fas fa-exclamation-circle me-2"></i>
          <span class="error-text"></span>
        </div>

        <div class="success-message">
          <i class="fas fa-check-circle me-2"></i>
          <span>OTP verified! Redirecting...</span>
        </div>

        <form id="otpForm" novalidate>
          <div class="form-floating">
            <input
              type="text"
              class="form-control"
              id="otp"
              placeholder="Enter OTP"
              required />
            <label for="otp">OTP</label>
          </div>

          <div class="timer-text">
            OTP expires in <span id="countdown">60</span> seconds
          </div>

          <button type="submit" class="btn btn-primary w-100 mb-3">
            <span class="spinner-border spinner-border-sm me-2 d-none"
              role="status"></span>
            Verify OTP
          </button>
        </form>

        <button id="resendBtn" class="btn btn-outline-primary w-100" disabled>
          Resend OTP
        </button>
      </div>
    </div>

    <script>
    function showError(message) {
      const errorDiv = document.getElementById('error');
      const errorText = errorDiv.querySelector('.error-text');
      errorText.textContent = message;
      errorDiv.classList.add('show');
    }

    function showSuccess() {
      const successDiv = document.querySelector('.success-message');
      successDiv.classList.add('show');
    }

    function resetButton() {
      const submitBtn = document.querySelector('button[type="submit"]');
      const spinner = submitBtn.querySelector('.spinner-border');
      submitBtn.disabled = false;
      spinner.classList.add('d-none');
    }

    document.getElementById('otpForm').addEventListener('submit', async (event) => {
      event.preventDefault();

      const submitBtn = event.target.querySelector('button[type="submit"]');
      const spinner = submitBtn.querySelector('.spinner-border');
      submitBtn.disabled = true;
      spinner.classList.remove('d-none');

      const errorDiv = document.getElementById('error');
      const successDiv = document.querySelector('.success-message');
      errorDiv.classList.remove('show');
      successDiv.classList.remove('show');

      const otp = document.getElementById('otp').value.trim();
      if (!otp) {
        showError("Please enter the OTP.");
        resetButton();
        return;
      }

      try {
        const response = await fetch("/auth/verify", {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify({ otp })
        });
        const result = await response.json();

        if (response.ok) {
          showSuccess();
          document.getElementById('otp').value = '';
          setTimeout(() => {
            window.location.href = "/auth/signin";
          }, 1500);
        } else {
          showError(result.message || "Invalid OTP.");
        }
      } catch (error) {
        showError("An error occurred. Please try again.");
      } finally {
        resetButton();
      }
    });

    // Timer functionality
    let timeLeft = 60;
    const countdownElement = document.getElementById('countdown');
    const resendBtn = document.getElementById('resendBtn');
    const countdownTimer = setInterval(() => {
      if (timeLeft <= 0) {
        clearInterval(countdownTimer);
        resendBtn.disabled = false;
        countdownElement.innerText = "0";
      } else {
        timeLeft--;
        countdownElement.innerText = timeLeft;
      }
    }, 1000);

    // Resend OTP logic
    resendBtn.addEventListener('click', async () => {
      resendBtn.disabled = true;
      timeLeft = 60;
      countdownElement.innerText = timeLeft;
      const newTimer = setInterval(() => {
        if (timeLeft <= 0) {
          clearInterval(newTimer);
          resendBtn.disabled = false;
          countdownElement.innerText = "0";
        } else {
          timeLeft--;
          countdownElement.innerText = timeLeft;
        }
      }, 1000);

      try {
        const response = await fetch("/auth/resend-otp", {
          method: "POST"
        });
        const result = await response.json();
        if (!response.ok) {
          showError(result.message || "Failed to resend OTP.");
        }
      } catch {
        showError("An error occurred while resending OTP.");
      }
    });
  </script>

    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  </body>
</html>

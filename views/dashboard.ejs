<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Dashboard</title>
        <link
            href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
            rel="stylesheet">
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <link
            href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
            rel="stylesheet">
        <link
            href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
            rel="stylesheet">
        <style>
        body {
            background-color: #000;
            color: #fff;
            margin: 0;
            padding: 0;
        }
        .bg-white {
        background-color: white; /* White background for the report box */
    }
        .sidebar {
            height: 100vh;
            position: fixed;
            top: 0;
            left: 0;
            z-index: 100;
            width: 250px;
            background-color: #212529;
            color: #fff;
            overflow-y: auto;
            border-right: 1px solid #444;
            border-radius: 0 10px 10px 0;
            box-shadow: 2px 0 5px rgba(0,0,0,0.5);
        }
        .sidebar .nav-link {
            color: #ddd;
            transition: background-color 0.3s, color 0.3s;
            padding: 10px 20px;
        }
        .sidebar .nav-link:hover {
            color: #fff;
            background-color: #495057;
        }
        .sidebar .nav-link.active {
            background-color: #007bff;
            color: #fff;
        }
        .content {
            margin-left: 250px;
            padding: 20px;
        }
        .content h2 {
            color: #fff;
        }
        .chart-container {
            width: 100%;
            max-width: 800px; /* Increase size for better visibility */
            margin: 20px auto; /* Center the charts */
        }
        .card {
            background-color: #343a40; /* Dark background for cards */
            color: #fff; /* White text color */
            border: none; /* Remove borders for a cleaner look */
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3); /* Add subtle shadow for depth */
        }
        .card-title {
            font-weight: bold; /* Make titles bold */
        }
        .footer {
            text-align: center;
            margin-top: 20px;
            padding: 10px;
            color: #ddd;
        }
        .top-selling {
    background-color: #ffffff; /* White background for the box */
    border-radius: 10px; /* Rounded corners */
    padding: 15px; /* Padding inside the box */
    margin-bottom: 20px; /* Space below the box */
    text-align: center; /* Center align text */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Soft shadow for the box */
}

.top-selling h2 {
    font-size: 1.5em; /* Font size for the title */
    margin-bottom: 10px; /* Space below the title */
}

.top-selling ul {
    list-style: none; /* Remove bullet points */
    padding: 0; /* Remove default padding */
}

.top-selling li {
    padding: 10px; /* Padding for each item */
    border-bottom: 1px solid #eaeaea; /* Light border between items */
}

.top-selling li:last-child {
    border-bottom: none; /* Remove border from the last item */
}

.top-selling li:hover {
    background-color: #f1f1f1; /* Change background on hover for effect */
}
.chart-container { position: relative; height: 400px; width: 100%; }
    </style>
    </head>
    <body>
        <div class="sidebar p-3">
            <h4 class="mb-4 text-center">Dashboard</h4>
            <ul class="nav flex-column">
                <li class="nav-item">
                    <a class="nav-link active" href="/admin/dashboard"><i
                            class="fas fa-tachometer-alt me-2"></i>Dashboard</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link " href="/admin/products"><i
                            class="fas fa-box me-2"></i>Products</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/admin/orders"><i
                            class="fas fa-shopping-cart me-2"></i>Orders</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/admin/category"><i
                            class="fas fa-tags me-2"></i>Category</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/admin/customers"><i
                            class="fas fa-users me-2"></i>Customers</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/admin/coupons"><i
                            class="fas fa-ticket-alt me-2"></i>Coupons</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/admin/banners"><i
                            class="fas fa-image me-2"></i>Banners</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/admin/offers"><i
                            class="fas fa-gift me-2"></i>Offers</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/admin/inventory"><i
                            class="fas fa-warehouse me-2"></i>Inventory</a>
                </li>
                <li class="nav-item mt-auto">
                    <a class="nav-link text-danger" href="/auth/logout"><i
                            class="fas fa-sign-out-alt me-2"></i>Logout</a>
                </li>
            </ul>
        </div>

        <div class="content">
            <div class="container">
                <h2 class="mt-3">Dashboard Overview</h2>
                <p>Welcome to your dashboard! Use the sidebar to navigate
                    through different sections.</p>

                <div class="row">
                    <div class="col-md-3">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">Total Success Orders</h5>
                                <h3 class="card-text"><%= ordersCount %></h3>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">Total Revenue</h5>
                                <h3 class="card-text"><%=
                                    totalRevenue.toFixed(2)%></h3>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">Total Discount</h5>
                                <h3 class="card-text"><%=
                                    totalDiscount.toFixed(2) %></h3>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">Total Users</h5>
                                <h3 class="card-text"><%= customersCount %></h3>
                            </div>
                        </div>
                    </div>
                </div>

                <h3 class="mt-5">Order Status Overview</h3>
                <div class="chart-container">
                    <canvas id="ordersChart" width="400" height="200"></canvas>
                </div>

            </div>
        </div>
        <!-- for show top selling product,category,brand -->
        <!-- categorycountbypurchased,productcountbybrandcount,productcountbypurchased -->
        <!-- Top Selling Section -->
        <section class="top-selling-section py-5 bg-light content">
            <!-- Top Selling Section -->
            <div class="row mb-4">
                <div class="col-md-4 mb-4">
                    <div class="card h-100">
                        <div class="card-header bg-primary text-white">
                            <h5 class="card-title mb-0"><i
                                    class="fas fa-tags me-2"></i>Top 10
                                Categories</h5>
                        </div>
                        <div class="card-body">
                            <ol
                                class="list-group list-group-flush list-group-numbered">
                                <% for (const p of topSellingCategories.slice(0,
                                10)) { %>
                                <li
                                    class="list-group-item d-flex justify-content-between align-items-start">
                                    <div class="ms-2 me-auto">
                                        <div class="fw-bold"><%= p.category
                                            %></div>
                                    </div>
                                    <span
                                        class="badge bg-primary rounded-pill"><%=
                                        p.totalSales %> sold</span>
                                </li>
                                <% } %>
                            </ol>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 mb-4">
                    <div class="card h-100">
                        <div class="card-header bg-primary text-white">
                            <h5 class="card-title mb-0"><i
                                    class="fas fa-tags me-2"></i>Top 10
                                Products</h5>
                        </div>
                        <div class="card-body">
                            <ol
                                class="list-group list-group-flush list-group-numbered">
                                <% for (const p of topSellingProducts.slice(0,
                                10)) { %>
                                <li
                                    class="list-group-item d-flex justify-content-between align-items-start">
                                    <div class="ms-2 me-auto">
                                        <div class="fw-bold"><%= p.product
                                            %></div>
                                    </div>
                                    <span
                                        class="badge bg-primary rounded-pill"><%=
                                        p.orderCount %> sold</span>
                                </li>
                                <% } %>
                            </ol>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 mb-4">
                    <div class="card h-100">
                        <div class="card-header bg-primary text-white">
                            <h5 class="card-title mb-0"><i
                                    class="fas fa-tags me-2"></i>Top 10
                                Brands</h5>
                        </div>
                        <div class="card-body">
                            <ol
                                class="list-group list-group-flush list-group-numbered">
                                <% for (const p of topSellingBrands.slice(0,
                                10)) { %>
                                <li
                                    class="list-group-item d-flex justify-content-between align-items-start">
                                    <div class="ms-2 me-auto">
                                        <div class="fw-bold"><%= p._id %></div>
                                    </div>
                                    <span
                                        class="badge bg-primary rounded-pill"><%=
                                        p.totalSales %> sold</span>
                                </li>
                                <% } %>
                            </ol>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <div class="content">
            <div class="container">
                <h2>Dashboard</h2>
                <p>Welcome to your dashboard! Use the sidebar to navigate
                    through different sections.</p>

                <!-- Sales Report Section -->
                <h3 class="mt-5">Sales Report</h3>
                <div class="form-group">
                    <label for="reportType">Select Report Type:</label>
                    <select id="reportType" class="form-select"
                        aria-label="Select Report Type">
                        <option value="daily">Daily</option>
                        <option value="weekly">Weekly</option>
                        <option value="monthly">Monthly</option>
                        <option value="yearly">Yearly</option>
                        <option value="custom">Custom Date Range</option>
                    </select>
                </div>
                <div id="customDateInputs" class="d-none">
                    <label for="startDate">Start Date:</label>
                    <input type="date" id="startDate" class="form-control">
                    <label for="endDate">End Date:</label>
                    <input type="date" id="endDate" class="form-control">
                </div>
                <button id="generateReport"
                    class="btn btn-primary mt-3">Generate Report</button>
                <button id="downloadPdf"
                    class="btn btn-secondary mt-3 d-none">Download PDF</button>

                <div id="salesReport" class="mt-3"></div>
            </div>
        </div>
        <div class="content">
            <div class="container">
                <h3 class="mt-5">Sales Overview</h3>
                <div class="form-group">
                    <label for="graphFilterType">Select Time Period:</label>
                    <select id="graphFilterType" class="form-select"
                        aria-label="Select Time Period">
                        <option value="yearly">Yearly</option>
                        <option value="monthly">Monthly</option>
                        <option value="weekly">Weekly</option>
                    </select>
                </div>
                <div class="chart-container">
                    <canvas id="salesChart" width="400" height="200"></canvas>
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script>
        document.getElementById('reportType').addEventListener('change', function() {
    const reportType = this.value;
    const customDateInputs = document.getElementById('customDateInputs');
    
    // Show custom date inputs only for the custom option
    if (reportType === 'custom') {
        customDateInputs.classList.remove('d-none');
    } else {
        customDateInputs.classList.add('d-none');
    }
});

document.getElementById('generateReport').addEventListener('click', function() {
    const reportType = document.getElementById('reportType').value;
    const salesReportDiv = document.getElementById('salesReport');
    let startDate = null;
    let endDate = null;

    if (reportType === 'custom') {
        startDate = document.getElementById('startDate').value;
        endDate = document.getElementById('endDate').value;
    }

    // Fetch the sales data based on the report type
    fetch(`/admin/sales/report?type=${reportType}&startDate=${startDate}&endDate=${endDate}`)
        .then(response => response.json())
        .then(data => {
            
            // Display the sales report
            salesReportDiv.innerHTML = generateSalesReportHtml(data);

            // Show the download PDF button
            document.getElementById('downloadPdf').classList.remove('d-none');
            console.log('dataaaaaaaaaaaaaaaaaaaa',data)
        })
        .catch(error => console.error('Error fetching report:', error));
});

function generateSalesReportHtml(data) {
    // Start with a container for the report
    let html = `
        <div class="container mt-5">
            <h1 class="text-center">Sales Report</h1>
            <h4 class="text-center">Generated on: ${new Date().toLocaleDateString()}</h4>
            <hr>
            <div class="bg-white p-4 rounded shadow">
                <h3>Summary</h3>
                <table class="table table-dark table-striped mt-3">
                    <thead>
                        <tr>
                            <th>Total Sales</th>
                            <th>Total Discount</th>
                            <th>Total Orders</th>
                        </tr>
                    </thead>
                    <tbody>
    `;
    
    // Loop through sales data to create summary rows
    data.forEach(sale => {
        html += `
            <tr>
                <td>${sale.totalSales.toFixed(2)}</td>
                <td>${sale.totalDiscount.toFixed(2)}</td>
                <td>${sale.orderCount}</td>
            </tr>
        `;
    });
    
    html += `
                    </tbody>
                </table>
    `; // Close the summary table
    
    // Now add details for each order
    data.forEach(sale => {
        // Add a section for each day's orders
        html += `
            <h4>Details for ${sale._id}</h4>
            <table class="table table-light table-striped mt-3">
                
                <thead>
                    <tr>
                        <th>Order Id</th>
                        <th>Price</th>
                        <th>Discount</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
        `;
        
        // Loop through orders for each sale and create detail rows
        for (const order of sale.orders) {
            html += `
                <tr>
                    <td>${order.orderId}</td>
                    <td>${order.totalPrice.toFixed(2)}</td>
                    <td>${order.discount.toFixed(2)}</td>
                    <td>${order.status}</td>
                </tr>
            `;
        }
        
        html += `
                </tbody>
            </table>
            <hr>
        `; // Close the order details table and add a horizontal line for separation
    });

    html += `
           
        </div> <!-- Close the white box -->
        </div> <!-- Close the container -->
    `; // Close the container

    return html; // Return the complete HTML string
}


// Add event listener for downloading PDF
document.getElementById('downloadPdf').addEventListener('click', function() {
    const reportType = document.getElementById('reportType').value;
    const startDate = reportType === 'custom' ? document.getElementById('startDate').value : null;
    const endDate = reportType === 'custom' ? document.getElementById('endDate').value : null;

    // Make a request to generate the PDF
    window.open(`/admin/sales/report/pdf?type=${reportType}&startDate=${startDate}&endDate=${endDate}`, '_blank');
});

    </script>
        <script
            src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
        <script>
        // Function to create a doughnut chart
        function createDoughnutChart(ctx, chartData) {
            const config = {
                type: 'doughnut',
                data: chartData,
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                        tooltip: {
                            callbacks: {
                                label: function(tooltipItem) {
                                    return tooltipItem.label + ': ' + tooltipItem.raw; // Show the count in the tooltip
                                }
                            }
                        }
                    }
                }
            };
            return new Chart(ctx, config);
        }

        // Fetch order statistics
        fetch('/admin/orders/stats') // Ensure the correct endpoint
            .then(response => response.json())
            .then(data => {
                const labels = Object.keys(data.statusCounts);
                const chartData = Object.values(data.statusCounts);

                // Prepare order data for the orders chart
                const ordersChartData = {
                    labels: labels,
                    datasets: [{
                        label: 'Orders Status',
                        data: chartData,
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.5)',
                            'rgba(54, 162, 235, 0.5)',
                            'rgba(255, 206, 86, 0.5)',
                            'rgba(75, 192, 192, 0.5)',
                            'rgba(153, 102, 255, 0.5)'
                        ],
                    }]
                };

                // Create the orders chart
                createDoughnutChart(document.getElementById('ordersChart'), ordersChartData);
            })
            .catch(error => console.error('Error fetching data:', error)); // Error handling

    </script>
        <script>
        // Function to create the sales chart
function createSalesChart(labels, data) {
  const ctx = document.getElementById('salesChart').getContext('2d');
  if (window.salesChart instanceof Chart) {
    window.salesChart.destroy();
  }
  window.salesChart = new Chart(ctx, {
    type: 'line',
    data: {
      labels: labels,
      datasets: [{
        label: 'Sales',
        data: data,
        borderColor: 'rgb(75, 192, 192)',
        tension: 0.1
      }]
    },
    options: {
      responsive: true,
      scales: {
        y: {
          beginAtZero: true
        }
      }
    }
  });
}

// Function to fetch sales data and update the chart
function updateSalesChart() {
  const filterType = document.getElementById('graphFilterType').value;
  fetch(`/admin/sales/graph?type=${filterType}`)
    .then(response => response.json())
    .then(data => {
      const labels = data.map(item => item.name);
      const salesData = data.map(item => item.sales);
      createSalesChart(labels, salesData);
    })
    .catch(error => console.error('Error fetching sales data:', error));
}

// Add event listener for filter change
document.getElementById('graphFilterType').addEventListener('change', updateSalesChart);

// Initial chart creation
updateSalesChart();
    </script>
    </body>
</html>

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
    <!-- Bootstrap CSS -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
        }

        .checkout-header {
            border-bottom: 1px solid #dee2e6;
            padding-bottom: 15px;
            margin-bottom: 15px;
        }

        .cart-item {
            padding: 15px 0;
            border-bottom: 1px solid #dee2e6;
        }

        .cart-item:last-child {
            border-bottom: none;
        }

        .cart-img {
            max-width: 120px;
            max-height: 120px;
            object-fit: cover;
        }

        .total-price {
            font-weight: bold;
            font-size: 1.5rem;
            margin-top: 20px;
        }

        .address-form,
        .payment-form {
            margin-top: 20px;
        }

        .btn-add-address {
            margin-top: 10px;
        }
        /* applycoupn adnd remove coupon */
        .coupon-container {
        border: 1px solid #ccc;
        border-radius: 8px;
        padding: 20px;
        margin: 20px 0;
        background-color: #f9f9f9;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .coupon-form {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .form-control {
        flex: 1;
        margin-right: 10px;
        padding: 10px;
        border-radius: 5px;
        border: 1px solid #ccc;
        transition: border 0.3s ease;
    }

    .form-control:focus {
        border-color: #007bff;
        outline: none;
        box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
    }

    .btn {
        padding: 10px 15px;
        border-radius: 5px;
        font-weight: bold;
        transition: background-color 0.3s ease;
    }

    .btn-secondary {
        background-color: #007bff;
        color: white;
    }

    .btn-secondary:hover {
        background-color: #0056b3;
    }

    .btn-info {
        background-color: #17a2b8;
        color: white;
    }

    .btn-info:hover {
        background-color: #138496;
    }

    .btn-danger {
        background-color: #dc3545;
        color: white;
    }

    .btn-danger:hover {
        background-color: #c82333;
    }

    .discount-message {
        margin-top: 10px;
        font-size: 16px;
        color: #28a745; /* Green color for success messages */
    }

    .coupon-error {
        margin-top: 5px;
        font-size: 14px;
    }
    </style>
</head>

<body>
    <nav class="navbar navbar-expand-lg navbar-light bg-light py-3 w-100">
        <div class="container">
            <a class="navbar-brand" href="/">
                <img src="/img/logo.png" alt="Logo" class="d-inline-block align-text-top" style="height: 40px;">
            </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ml-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/products">Products</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/about">About</a>
                    </li>
                </ul>
                <!-- Search Bar -->
                <!-- <form class="form-inline mx-lg-4 my-2 my-lg-0">
                    <input class="form-control mr-sm-2" type="search" placeholder="Search for products..." aria-label="Search">
                    <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
                </form> -->
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" href="/auth/signin">
                            <img src="/img/log-in.png" alt="Login" class="nav-icon" style="height: 24px;">
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/user/wishlist">
                            <img src="/img/wishlist.png" alt="Wishlist" class="nav-icon" style="height: 24px;">
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/cart">
                            <img src="/img/cart.png" alt="Cart" class="nav-icon" style="height: 24px;">
                            <span class="badge badge-pill badge-danger"></span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/user/profile">
                            <img src="/img/userprofile.jpg" alt="User Profile" class="nav-icon rounded-circle" style="height: 24px;">
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container mt-5">
        <h2 class="checkout-header text-center">Checkout</h2>

<!-- Coupon Check Form -->
<div class="coupon-container">
    <form id="couponCheckForm" class="coupon-form">
        <input type="text" name="couponCode" id="couponCode" placeholder="Enter your coupon to check" class="form-control mb-2" >
        <button type="submit" class="btn btn-secondary">Apply Coupon</button>
    </form>
    <div id="discountMessage" class="discount-message"></div>
    <div id="couponError" class="coupon-error" style="color:red;"></div>
    
    <!-- Buttons for Copying and Removing Coupon -->
    <!-- <button id="copyCoupon" class="btn btn-info mt-2" style="display:none;">Copy Coupon Code</button> -->
    <button id="removeCoupon" class="btn btn-danger mt-2" style="display:none;">Remove Coupon</button>
</div>

        <!-- Cart Items -->
        <h4>Cart Items</h4>
        <% if (cart && cart.products && cart.products.length > 0) { %>
            <div class="row">
                <% for (const product of cart.products) { %>
                    <div class="col-12 cart-item">
                        <div class="row">
                            <div class="col-3 text-center">
                                <img src="<%= product.productId.images[0].secured_url %>" class="cart-img" alt="<%= product.productId.product %>">
                            </div>
                            <div class="col-5">
                                <h5><%= product.productId.product %></h5>
                                <p>Price: $<%= product.productId.finalPrice %></p>
                                <p>Quantity: <%= product.quantity %></p>
                                <p>Subtotal: $<%= (product.productId.finalPrice * product.quantity).toFixed(2) %></p>
                            </div>
                        </div>
                    </div>
                <% } %>
            </div>

            <div class="text-right total-price">
                Total Price: $<%= cart.finalPrice.toFixed(2) %>
            </div>
        <% } else { %>
            <div class="text-center">
                <h3>Your cart is empty</h3>
                <a href="/products" class="btn btn-primary">Continue Shopping</a>
            </div>
        <% } %>

        <!-- Shipping Address -->
        <h4 class="mt-4">Shipping Address</h4>
        <form id="checkoutForm" action="/checkout" method="POST">
            <h3>Select Shipping Address</h3>
            
            <% user.address.forEach((address, index) => { %>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="selectedAddress" id="address<%= index %>" value="<%= address._id %>" <%= index === 0 ? 'checked' : '' %>>
                    <label class="form-check-label" for="address<%= index %>">
                        <%= address.street %>, <%= address.city %>, <%= address.state %> - <%= address.postalCode %>, <%= address.country %>
                    </label>
                </div>
            <% }) %>

            <!-- Add New Address Radio Button -->
            <div class="form-check">
                <input class="form-check-input" type="radio" name="selectedAddress" id="newAddress" value="new">
                <label class="form-check-label" for="newAddress">
                    Add New Address
                </label>
            </div>

            <!-- New Address Form -->
            <div id="newAddressForm" style="display:none;">
                <div class="form-group mt-3">
                    <label for="street">Street</label>
                    <input type="text" class="form-control" id="newStreet" name="newStreet" placeholder="123 Main St">
                </div>
                <div class="form-group">
                    <label for="city">City</label>
                    <input type="text" class="form-control" id="newCity" name="newCity" placeholder="City">
                </div>
                <div class="form-group">
                    <label for="state">State</label>
                    <input type="text" class="form-control" id="newState" name="newState" placeholder="State">
                </div>
                <div class="form-group">
                    <label for="postalCode">Postal Code</label>
                    <input type="text" class="form-control" id="newPostalCode" name="newPostalCode" placeholder="Postal Code">
                </div>
                <div class="form-group">
                    <label for="country">Country</label>
                    <input type="text" class="form-control" id="newCountry" name="newCountry" placeholder="Country">
                </div>
                <div class="form-group">
                    <label for="phoneNo">Phone Number</label>
                    <input type="text" class="form-control" id="newPhoneNo" name="newPhoneNo" placeholder="Phone Number">
                </div>
                <button type="button" class="btn btn-success mt-3" id="confirmNewAddress">Confirm Address</button>
            </div>

            <!-- Payment Method Section -->
            <h4 class="mt-4">Payment Method</h4>
            <div class="form-group">
                <label for="paymentMethod">Select Payment Method</label>
                <select class="form-control" id="paymentMethod" name="paymentMethod">
                    <option value="cod">Cash on Delivery (COD)</option>
                    <option value="razorpay">Razorpay</option>
                </select>
            </div>

            <!-- Proceed to Checkout Button -->
            <button type="submit" class="btn btn-primary mt-3" id="placeOrder" disabled>Place Order</button>
        </form>
    </div>

    <footer class="bg-dark text-white mt-5">
        <div class="container text-center py-4">
            <p>&copy; 2024 Your E-Commerce Site. All rights reserved.</p>
        </div>
    </footer>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const couponCheckForm = document.getElementById('couponCheckForm');
            const discountMessage = document.getElementById('discountMessage');
            const couponError = document.getElementById('couponError');
            // const copyCouponButton = document.getElementById('copyCoupon');
            const removeCouponButton = document.getElementById('removeCoupon');
        
            // Function to reset coupon UI
            function resetCouponUI() {
                // Clear the coupon data from sessionStorage
                sessionStorage.removeItem('couponData');
                discountMessage.innerHTML = ''; // Clear discount messages
                couponError.textContent = ''; // Clear error messages
                // copyCouponButton.style.display = 'none'; // Hide "Copy Coupon" button
                removeCouponButton.style.display = 'none'; // Hide "Remove Coupon" button
            }
        
            // Function to update UI based on coupon state
            function updateCouponUI() {
                const couponData = sessionStorage.getItem('couponData');
                if (couponData) {
                    const { couponCode, totalPrice, discount, discountPercentage } = JSON.parse(couponData);
                    discountMessage.innerHTML = `
                        <p>Coupon applied! Final Price: $${totalPrice.toFixed(2)}</p>
                        <p>Discount: $${discount.toFixed(2)} (${discountPercentage}%)</p>
                    `;
                    // copyCouponButton.style.display = 'block'; // Show the "Copy Coupon" button
                    removeCouponButton.style.display = 'block'; // Show the "Remove Coupon" button
                    // copyCouponButton.onclick = () => {
                    //     navigator.clipboard.writeText(couponCode);
                    //     alert('Coupon code copied to clipboard!');
                    // };
                } else {
                    resetCouponUI(); // Reset UI if no coupon is applied
                }
            }
        
            // Call updateCouponUI on page load to reflect any existing coupon data
            updateCouponUI();
        
            // Handle Apply Coupon
            couponCheckForm.addEventListener('submit', async function (e) {
                e.preventDefault(); // Prevent the default form submission
        
                const couponCode = document.getElementById('couponCode').value;
                couponError.textContent = ''; // Clear previous errors
        
                try {
                    const response = await fetch('/checkout/coupon-check', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ couponCode })
                    });
        
                    const result = await response.json();
        
                    if (result.success) {
                        // Store coupon data in sessionStorage
                        sessionStorage.setItem('couponData', JSON.stringify({
                            couponCode,
                            totalPrice: result.totalPrice,
                            discount: result.discount,
                            discountPercentage: result.discountPercentage
                        }));
                        location.reload()
                        // Update the UI after applying the coupon
                        updateCouponUI();
                    } else {
                        // Show error message
                        discountMessage.innerHTML = '';
                        couponError.textContent = result.message;
                        // copyCouponButton.style.display = 'none'; // Hide buttons if coupon check fails
                        removeCouponButton.style.display = 'none';
                    }
                } catch (error) {
                    console.error('Error applying coupon:', error);
                    couponError.textContent = 'An error occurred. Please try again.';
                }
            });
        
            // Handle Remove Coupon
            removeCouponButton.addEventListener('click', async function () {
                try {
                    const response = await fetch('/checkout/coupon-delete', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                    });
        
                    const result = await response.json();
        
                    if (response.ok) {
                        // Clear coupon data from sessionStorage
                        sessionStorage.removeItem('couponData');
                        location.reload()
                        // Update UI after removing coupon
                        updateCouponUI();
                    } else {
                        // Show error message
                        couponError.textContent = result.message;
                    }
                } catch (error) {
                    console.error('Error removing coupon:', error);
                    couponError.textContent = 'An error occurred. Please try again.';
                }
            });
        
            // Function to start a new checkout
            function startNewCheckout() {
                // Reset the coupon UI and other necessary state
                resetCouponUI(); // Reset the coupon UI
                // Logic for new checkout can be added here if needed
                // e.g., clear cart items, update UI elements, etc.
                updateCouponUI(); // Call to ensure UI is up to date
            }
        
            // Example: Call startNewCheckout when navigating to checkout again
            document.getElementById('placeOrder').addEventListener('click', startNewCheckout);
        
            // If you want to reset when an order is successful
            document.getElementById('simulateOrderSuccessButton').addEventListener('click', function() {
                // Simulate order success logic...
                startNewCheckout(); // Call to reset coupon for new order
            });
        });
        </script>
        
    
    
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
        $(document).ready(function () {
            // Show new address form
            $('input[name="selectedAddress"]').on('change', function () {
                if ($(this).val() === 'new') {
                    $('#newAddressForm').show();
                } else {
                    $('#newAddressForm').hide();
                    $('#placeOrder').prop('disabled', false); // Enable if existing address is selected
                }
            });
    
            // Enable the Place Order button based on address selection and form validation
            $('input[name="selectedAddress"]').on('change', function () {
                const selectedAddress = $('input[name="selectedAddress"]:checked').val();
                if (selectedAddress === 'new') {
                    $('#placeOrder').prop('disabled', true); // Disable until new address is confirmed
                } else {
                    $('#placeOrder').prop('disabled', false);
                }
            });
    
            // Confirm new address
            $('#confirmNewAddress').on('click', function () {
                const street = $('#newStreet').val();
                const city = $('#newCity').val();
                const state = $('#newState').val();
                const postalCode = $('#newPostalCode').val();
                const country = $('#newCountry').val();
                const phoneNo = $('#newPhoneNo').val();
    
                if (!street || !city || !state || !postalCode || !country || !phoneNo) {
                    alert("Please fill in all address fields.");
                    return;
                }
    
                // New address confirmed logic (you can add API call or other logic here)
                alert("New address confirmed!");
    
                // Enable Place Order button after confirmation
                $('#placeOrder').prop('disabled', false);
            });
    
            // Handle form submission
            $('#checkoutForm').on('submit', function (e) {
                e.preventDefault();
                
                const paymentMethod = $('#paymentMethod').val();
                if (paymentMethod === 'razorpay') {
                    const finalPrice=<%=cart.finalPrice%>
                    // Initiate Razorpay payment
                    const options = {
                        key: 'rzp_test_HcIqECgcTGh7Na',
                        amount: finalPrice*100, // amount in smallest currency unit
                        currency: "INR",
                        name: "Your E-Commerce Site",
                        description: "Order Payment",
                        handler: function (response) {
                            // Handle payment success here
                            alert("Payment Successful! Transaction ID: " + response.razorpay_payment_id);
                            $('#checkoutForm').off('submit').submit(); // Submit form after successful payment
                        },
                        prefill: {
                            name: "Customer Name",
                            email: "customer@example.com",
                            phone_number: "9999999999"
                        },
                        theme: {
                            color: "#F37254"
                        }
                    };
                    const razorpay = new Razorpay(options);
                    razorpay.open();
                } else {
                    // Handle Cash on Delivery
                    
                    this.submit();
                }
            });
        });
    </script>
 
     
 
 
</body>

</html>



<!DOCTYPE html>
<html lang="en">

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Admin Order Detail</title>
        <link
            href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
            rel="stylesheet">
        <link
            href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"
            rel="stylesheet">
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <style>
    body {
      font-family: 'Roboto', sans-serif;
      background-color: #f5f6fa;
      min-height: 100vh;
    }

    .main-content {
      margin-left: 150px; /* space for sidebar */
      padding: 20px;
      transition: all 0.3s;
    }

    .card {
      border-radius: 12px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
      margin-bottom: 20px;
      transition: all 0.3s;
    }

    .badge {
      font-size: 0.85rem;
      border-radius: 50px;
      padding: 0.45rem 0.75rem;
    }

    .status-badge {
      font-size: 0.9rem;
      text-transform: capitalize;
    }

    .product-item {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      border-bottom: 1px solid #e9ecef;
      padding: 15px 0;
    }

    .product-item img {
      width: 80px;
      height: 80px;
      object-fit: cover;
      border-radius: 6px;
    }

    .product-details {
      flex: 1;
      min-width: 200px;
      margin-left: 15px;
    }

    @media (max-width: 992px) {
      .main-content {
        margin-left: 0;
        padding: 15px;
      }
    }

    @media (max-width: 576px) {
      .product-item {
        flex-direction: column;
        align-items: flex-start;
      }

      .product-details {
        margin-left: 0;
        margin-top: 10px;
      }

      .d-flex.gap-2 {
        flex-direction: column;
      }

      .d-flex.gap-2 a,
      .d-flex.gap-2 button {
        width: 100%;
      }
    }
  </style>
    </head>

    <body>
        <div class="main-content">
            <!-- Order Header -->
            <div class="text-center mb-4">
                <h3 class="fw-bold">Order <span class="text-primary">#<%=
                        order._id %></span></h3>
                <span class="text-muted">Placed on <%= new
                    Intl.DateTimeFormat('en-GB', { dateStyle: 'medium',
                    timeStyle: 'short' }).format(new Date(order.orderDate))
                    %></span>
            </div>

            <!-- Order Summary -->
            <div class="card order-summary">
                <div class="card-body">
                    <div
                        class="d-flex justify-content-between flex-wrap align-items-center mb-3">
                        <h5 class="mb-0">Total: <%= new
                            Intl.NumberFormat('en-IN', { style: 'currency',
                            currency: 'INR' }).format(order.totalPrice) %></h5>
                        <span
                            class="badge <%= order.paymentDetails.transactionId ? 'bg-success' : 'bg-warning text-dark' %>">
                            <%= order.paymentDetails.transactionId ? 'Paid' :
                            'Not Paid' %>
                        </span>
                    </div>

                    <p><strong>Status:</strong> <span id="currentStatusBadge"
                            class="badge status-badge bg-<%= order.status === 'delivered' ? 'success' : order.status === 'shipped' ? 'info' : order.status === 'pending' ? 'warning text-dark' : 'secondary' %>"><%=
                            order.status.charAt(0).toUpperCase() +
                            order.status.slice(1) %></span></p>
                    <p><strong>Delivery Date:</strong> <%= new
                        Intl.DateTimeFormat('en-GB', { dateStyle: 'medium',
                        timeStyle: 'short' }).format(new
                        Date(order.deliveryDate)) %></p>

                    <h6>Payment Details</h6>
                    <p><strong>Method:</strong> <%=
                        order.paymentDetails.paymentMethod %></p>
                    <p><strong>Transaction ID:</strong> <%=
                        order.paymentDetails.transactionId || 'N/A' %></p>

                    <h6>Shipping Address</h6>
                    <p><i class="fas fa-phone me-2"></i> <%=
                        order.shippingAddress.phoneNo %></p>
                    <p><i class="fas fa-map-marker-alt me-2"></i> <%=
                        order.shippingAddress.street %>, <%=
                        order.shippingAddress.city %>, <%=
                        order.shippingAddress.state %>, <%=
                        order.shippingAddress.zip %>, <%=
                        order.shippingAddress.country %></p>
                </div>
            </div>

            <!-- Reject Reason -->
            <% if (order.returnReason) { %>
            <div class="card mb-4">
                <div class="card-body">
                    <h5 class="mb-3 text-danger">Reject Reason</h5>
                    <p class="mb-0"><%= order.returnReason %></p>
                </div>
            </div>
            <% } %>

            <!-- Update Status -->
            <div class="card mb-4">
                <div class="card-body">
                    <h5 class="mb-3">Update Order Status</h5>
                    <form id="orderStatusForm">
                        <div class="mb-3">
                            <select id="status" name="status"
                                class="form-select"></select>
                        </div>
                        <div class="d-flex flex-wrap gap-2">
                            <button type="submit" id="updateBtn"
                                class="btn btn-primary">Update Status</button>
                            <a href="/admin/orders"
                                class="btn btn-secondary">Back to Orders</a>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Ordered Products -->
            <div class="card">
                <div class="card-body">
                    <h5 class="mb-3">Ordered Products</h5>
                    <% order.orderedProducts.forEach(product => { %>
                    <div class="product-item">
                        <img src="<%= product.productImage %>"
                            alt="<%= product.productName %>">
                        <div class="product-details">
                            <h6><%= product.productName %></h6>
                            <p class="mb-1">Size: <%= product.productSize %></p>
                            <p class="mb-1">Qty: <%= product.productQuantity
                                %></p>
                            <p class="mb-1">Unit: <%= new
                                Intl.NumberFormat('en-IN', { style: 'currency',
                                currency: 'INR' }).format(product.productPrice)
                                %></p>
                            <p class="fw-bold">Subtotal: <%= new
                                Intl.NumberFormat('en-IN', { style: 'currency',
                                currency: 'INR' }).format(product.productPrice *
                                product.productQuantity) %></p>
                        </div>
                    </div>
                    <% }) %>
                </div>
            </div>
        </div>

        <script>
   document.addEventListener("DOMContentLoaded", function () {
  let currentStatus = "<%= order.status %>";
  const orderId = "<%= order._id %>";
  const statusSelect = document.getElementById("status");
  const form = document.getElementById("orderStatusForm");
  const updateBtn = document.getElementById("updateBtn");
  const currentStatusBadge = document.getElementById("currentStatusBadge");

  // Define valid transitions
  const validTransitions = {
    "pending": ["processing"],
    "processing": ["shipped"],
    "shipped": ["delivered"],
    "delivered": [],
    "cancelled": [],
    "pending_return": ["processing_return", "rejected_return"],
    "processing_return": ["initiated_return", "rejected_return"],
    "initiated_return": ["returned", "rejected_return"],
    "returned": ["refunded"],
    "refunded": [],
    "out_of_stock": ["pending", "processing"],
    "on_hold": ["pending", "processing"],
    "payment_failed": []
  };

  function populateDropdown(status) {
    statusSelect.innerHTML = "";
    const transitions = validTransitions[status] || [];

    if (transitions.length === 0) {
      const opt = document.createElement("option");
      opt.textContent = "No status updates available";
      opt.disabled = true;
      opt.selected = true;
      statusSelect.appendChild(opt);
      updateBtn.disabled = true;
    } else {
      transitions.forEach(nextStatus => {
        const opt = document.createElement("option");
        opt.value = nextStatus;
        opt.textContent = nextStatus
          .replace(/_/g, " ")
          .replace(/\b\w/g, c => c.toUpperCase());
        statusSelect.appendChild(opt);
      });
      updateBtn.disabled = false;
    }
  }

  // Initial population
  populateDropdown(currentStatus);

  form.addEventListener("submit", async function (e) {
    e.preventDefault();
    const selectedStatus = statusSelect.value;

    if (!validTransitions[currentStatus].includes(selectedStatus)) {
      Swal.fire({
        icon: "error",
        title: "Invalid Transition",
        text: `Cannot change status from "${currentStatus.replace(/_/g," ")}" to "${selectedStatus.replace(/_/g," ")}".`
      });
      return;
    }

    updateBtn.disabled = true;
    updateBtn.textContent = "Updating...";

    try {
      const response = await fetch(`/admin/orders/${orderId}/edit`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ status: selectedStatus })
      });

      const result = await response.json();

      if (response.ok) {
        currentStatusBadge.textContent = selectedStatus
          .replace(/_/g, " ")
          .replace(/\b\w/g, c => c.toUpperCase());
        currentStatusBadge.className = "badge status-badge bg-success";
        currentStatus=selectedStatus;
        // Refresh dropdown for next valid transitions
        populateDropdown(selectedStatus);

        Swal.fire({
          icon: "success",
          title: "Status Updated!",
          text: `Order status changed to "${selectedStatus.replace(/_/g," ")}".`,
          confirmButtonColor: "#198754"
        });
      } else {
        Swal.fire({
          icon: "error",
          title: "Update Failed",
          text: result.message || "Something went wrong. Try again."
        });
      }
    } catch (err) {
      Swal.fire({
        icon: "error",
        title: "Network Error",
        text: "Unable to reach the server."
      });
    } finally {
      updateBtn.disabled = false;
      updateBtn.textContent = "Update Status";
    }
  });
});

  </script>
    </body>
</html>

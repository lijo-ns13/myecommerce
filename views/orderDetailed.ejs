<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Order Details</title>
        <link rel="stylesheet"
            href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
        <link rel="stylesheet"
            href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
        <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');

        body {
            font-family: 'Inter', sans-serif;
            background-color: #f4f4f4;
            color: #333;
        }
        :root {
            --primary: #4f46e5;
            --primary-dark: #4338ca;
            --secondary: #64748b;
            --danger: #ef4444;
            --success: #22c55e;
            --warning: #f59e0b;
            --background: #f8fafc;
            --card-bg: #ffffff;
            --text: #1e293b;
            --border: #e2e8f0;
            --shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
        }

        .navbar {
            background-color: white;
            box-shadow: 0 2px 4px rgba(0,0,0,0.04);
        }

        @keyframes bounce {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-10px); }
        }

        .navbar-nav {
            display: flex;
            align-items: center;
            list-style: none;
            padding: 0;
            margin: 0;
        }

        footer {
            background-color: #333;
            color: white;
            padding: 40px 0;
        }

        .footer-content {
            display: flex;
            justify-content: space-between;
            flex-wrap: wrap;
        }

        .footer-section {
            flex: 1;
            margin-right: 20px;
            min-width: 200px;
        }

        .footer-section h3 {
            margin-bottom: 20px;
            font-size: 1.2rem;
            color: var(--accent-color);
        }

        .footer-section ul {
            list-style-type: none;
            padding: 0;
        }

        .footer-section ul li {
            margin-bottom: 10px;
        }

        .footer-section ul li a {
            color: #ccc;
            text-decoration: none;
            transition: color 0.3s ease;
        }

        .footer-section ul li a:hover {
            color: white;
        }

        @media (max-width: 768px) {
            .footer-section {
                flex: 100%;
                margin-bottom: 30px;
            }
        }

        .social-icons {
            display: flex;
            align-items: center;
        }

        .social-icons a {
            color: white;
            font-size: 1.5rem;
            margin-right: 15px;
            transition: transform 0.3s ease, color 0.3s ease;
        }

        .social-icons a:hover {
            color: var(--accent-color);
            transform: scale(1.2);
        }

        .nav-item {
            margin: 0 10px;
        }

        .nav-link {
            display: flex;
            align-items: center;
            text-decoration: none;
            color: #333;
            font-size: 18px;
        }

        .nav-link i {
            font-size: 24px;
            margin-right: 5px;
        }

        .rounded-circle {
            width: 30px;
            height: 30px;
        }

        @media (max-width: 767px) {
            .navbar-nav {
                flex-direction: row;
                justify-content: center;
                margin-top: 1rem;
            }

            .nav-item {
                margin: 0 5px;
            }

            .nav-link {
                font-size: 16px;
            }

            .nav-link i {
                font-size: 20px;
            }
        }

        .order-container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 0 1rem;
        }

        .hero-section {
            background: linear-gradient(to right, var(--primary), var(--primary-dark));
            border-radius: 1rem;
            padding: 2.5rem;
            color: white;
            margin-bottom: 2rem;
            position: relative;
            overflow: hidden;
        }

        .hero-section::after {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            background: url('/api/placeholder/1200/300') center/cover;
            opacity: 0.1;
            pointer-events: none;
        }

        .status-card {
            background: var(--card-bg);
            border-radius: 1rem;
            padding: 1.5rem;
            box-shadow: var(--shadow);
            margin-bottom: 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .product-card {
            background: var(--card-bg);
            border-radius: 1rem;
            overflow: hidden;
            box-shadow: var(--shadow);
            margin-bottom: 1.5rem;
            transition: transform 0.2s;
        }

        .product-card:hover {
            transform: translateY(-4px);
        }

        .product-image {
            width: 120px;
            height: 120px;
            object-fit: cover;
            border-radius: 0.5rem;
        }

        .badge {
            padding: 0.5rem 1rem;
            border-radius: 9999px;
            font-weight: 500;
            font-size: 0.875rem;
        }

        .badge-primary {
            background: var(--primary);
            color: white;
        }

        .badge-success {
            background: var(--success);
            color: white;
        }

        .badge-warning {
            background: var(--warning);
            color: white;
        }

        .badge-danger {
            background: var(--danger);
            color: white;
        }

        .info-section {
            background: var(--card-bg);
            border-radius: 1rem;
            padding: 1.5rem;
            box-shadow: var(--shadow);
            margin-bottom: 1.5rem;
        }

        .price-breakdown {
            background: var(--card-bg);
            border-radius: 1rem;
            padding: 1.5rem;
            box-shadow: var(--shadow);
        }

        .price-item {
            display: flex;
            justify-content: space-between;
            padding: 0.75rem 0;
            border-bottom: 1px solid var(--border);
        }

        .price-item:last-child {
            border-bottom: none;
            font-weight: 600;
            font-size: 1.125rem;
        }

        .btn {
            padding: 0.75rem 1.5rem;
            border-radius: 0.5rem;
            font-weight: 500;
            transition: all 0.2s;
        }

        .btn-primary {
            background: var(--primary);
            border: none;
            color: white;
        }

        .btn-primary:hover {
            background: var(--primary-dark);
            transform: translateY(-2px);
        }

        .btn-danger {
            background: var(--danger);
            border: none;
            color: white;
        }

        .btn-danger:hover {
            background: #dc2626;
            transform: translateY(-2px);
        }

        .return-form {
            background: var(--card-bg);
            border-radius: 1rem;
            padding: 2rem;
            box-shadow: var(--shadow);
            margin-top: 2rem;
        }

        .form-control, .form-select {
            border: 1px solid var(--border);
            border-radius: 0.5rem;
            padding: 0.75rem;
        }

        .form-control:focus, .form-select:focus {
            border-color: var(--primary);
            box-shadow: 0 0 0 2px rgba(79, 70, 229, 0.1);
        }

        .cancelled-product {
            opacity: 0.6;
        }
    </style>
    </head>
    <body>
        <nav class="navbar navbar-expand-lg navbar-light bg-light py-3 w-100">
            <div class="container-fluid">
                <a class="navbar-brand" href="/">
                    <img src="/img/logo.png" alt="Logo"
                        class="d-inline-block align-text-top"
                        style="height: 40px;">
                </a>
                <button class="navbar-toggler" type="button"
                    data-toggle="collapse" data-target="#navbarNav"
                    aria-controls="navbarNav" aria-expanded="false"
                    aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav ml-auto">
                        <li class="nav-item">
                            <a class="nav-link" href="/">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/products">Products</a>
                        </li>
                    </ul>
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a class="nav-link" href="/auth/signin">
                                <img src="/img/log-in.png" alt="Login"
                                    class="nav-icon" style="height: 24px;">
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/user/wishlist">
                                <img src="/img/wishlist.png" alt="Wishlist"
                                    class="nav-icon" style="height: 24px;">
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/cart">
                                <img src="/img/cart.png" alt="Cart"
                                    class="nav-icon" style="height: 24px;">
                                <span
                                    class="badge badge-pill badge-danger"></span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/user/profile">
                                <img src="/img/userprofile.jpg"
                                    alt="User Profile"
                                    class="nav-icon rounded-circle"
                                    style="height: 24px;">
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="order-container">
            <div class="hero-section">
                <h1 class="mb-2">Order Details</h1>
                <p class="mb-0 opacity-75">Order #<%= order.genOrderId %></p>
            </div>

            <div class="status-card">
                <div class="d-flex align-items-center gap-3">
                    <span
                        class="badge <%= order.status === 'delivered' ? 'badge-success' : order.status === 'cancelled' ? 'badge-danger' : 'badge-warning' %>">
                        <%= order.status.charAt(0).toUpperCase() +
                        order.status.slice(1) %>
                    </span>
                    <div class="vr"></div>
                    <span>
                        <i class="fas fa-calendar me-2"></i>
                        <%= new
                        Date(order.orderDate).toLocaleDateString('en-IN', {
                        year: 'numeric', month: 'long', day: 'numeric' }) %>
                    </span>
                </div>
                <% if(['pending', 'processing',
                'shipped'].includes(order.status)) { %>
                <div class="text-secondary">
                    <i class="fas fa-truck me-2"></i>
                    Expected delivery: <%= deliveryDate %>
                </div>
                <% } %>
            </div>

            <div class="row">
                <div class="col-md-8">
                    <h3 class="mb-4">Products</h3>
                    <% for (const orderData of order.orderedProducts) { %>
                    <div
                        class="product-card <%= orderData.status === 'cancelled' ? 'cancelled-product' : '' %>">
                        <div class="d-flex p-3 gap-4">
                            <img src="<%= orderData.productImage %>"
                                alt="<%= orderData.productName %>"
                                class="product-image" loading="lazy">
                            <div class="flex-grow-1">
                                <h5 class="mb-3"><%= orderData.productName
                                    %></h5>
                                <div class="d-flex gap-2 mb-3">
                                    <span class="badge bg-light text-dark">Size:
                                        <%= orderData.productSize %></span>
                                    <span class="badge bg-light text-dark">Qty:
                                        <%= orderData.productQuantity %></span>
                                    <% if (orderData.status === 'cancelled') {
                                    %>
                                    <span
                                        class="badge badge-danger">Cancelled</span>
                                    <% } %>
                                </div>
                                <div
                                    class="d-flex justify-content-between align-items-center">
                                    <span class="fs-5 fw-bold text-primary">
                                        <%= orderData.status === 'cancelled' ?
                                        '₹0' : '₹' +
                                        orderData.finalUnitPrice.toLocaleString('en-IN')
                                        %>
                                    </span>
                                    <div class="d-flex gap-2">
                                        <% if (orderData.status === 'active' &&
                                        ['pending',
                                        'processing'].includes(order.status)) {
                                        %>
                                        <a
                                            href="/user/review/add/<%= orderData.productId %>"
                                            class="btn btn-sm btn-outline-primary">Rate
                                            Product</a>
                                        <form
                                            id="cancelForm-<%= orderData.productId %>"
                                            action="/user/orders/cancelsingle/<%= order._id %>/<%= orderData.productId %>/<%= orderData.productSize %>/<%= orderData.productQuantity %>"
                                            method="post" class="d-inline">
                                            <button type="submit"
                                                class="btn btn-sm btn-outline-danger">Cancel
                                                Item</button>
                                        </form>
                                        <% } %>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <% } %>
                </div>

                <div class="col-md-4">
                    <div class="info-section mb-4">
                        <h4 class="mb-3">Shipping Address</h4>
                        <address class="mb-0">
                            <%= order.shippingAddress.street %><br>
                            <%= order.shippingAddress.city %>, <%=
                            order.shippingAddress.state %> <%=
                            order.shippingAddress.postalCode %><br>
                            <%= order.shippingAddress.country %><br>
                            <strong>Phone:</strong> <%=
                            order.shippingAddress.phoneNo %>
                        </address>
                    </div>

                    <div class="info-section mb-4">
                        <h4 class="mb-3">Payment Details</h4>
                        <p class="mb-2"><strong>Method:</strong> <%=
                            order.paymentDetails.paymentMethod %></p>
                        <% if (['razorpay',
                        'wallet'].includes(order.paymentDetails.paymentMethod))
                        { %>
                        <p class="mb-2"><strong>Amount Paid:</strong> ₹<%=
                            order.totalPrice.toLocaleString('en-IN') %></p>
                        <% } %>
                        <p class="mb-0"><strong>Transaction ID:</strong> <%=
                            order.paymentDetails.transactionId %></p>
                    </div>

                    <div class="price-breakdown">
                        <h4 class="mb-3">Price Details</h4>
                        <div class="price-item">
                            <span>Original Price</span>
                            <span>₹<%=
                                order.originalPrice.toLocaleString('en-IN')
                                %></span>
                        </div>
                        <div class="price-item">
                            <span>Discount</span>
                            <span>₹<%= (order.discount ||
                                0).toLocaleString('en-IN') %></span>
                        </div>
                        <div class="price-item">
                            <span>Total Amount</span>
                            <span>₹<%= order.totalPrice.toLocaleString('en-IN')
                                %></span>
                        </div>
                    </div>
                    <% const cancellableStatuses = ['pending', 'processing',
                    'shipped']; %>
                    <% if (cancellableStatuses.includes(order.status)) { %>
                    <button id="cancelOrderBtn"
                        class="btn btn-danger w-100 mt-4">Cancel Order</button>
                    <% } %>
                    <% if (order.status === 'delivered') { %>
                    <button id="returnOrderBtn"
                        class="btn btn-primary w-100 mt-4"
                        data-bs-toggle="modal"
                        data-bs-target="#returnOrderModal">Return Order</button>
                    <% } %>
                    <% if (order.status === 'payment_failed') { %>
                    <button id="payNowButton"
                        class="btn btn-primary w-100 mt-4">Pay Now</button>
                    <% } %>
                    <a href="/user/orders/download-invoice/<%= order._id %>"
                        class="btn btn-outline-primary w-100 mt-3">
                        <i class="fas fa-download me-2"></i>Download Invoice
                    </a>
                    <a href="/user/orders"
                        class="btn btn-outline-secondary w-100 mt-3">
                        <i class="fas fa-arrow-left me-2"></i>Back to Orders
                    </a>
                </div>
            </div>

            <!-- Return Order Modal -->
            <div class="modal fade" id="returnOrderModal" tabindex="-1"
                aria-labelledby="returnOrderModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title"
                                id="returnOrderModalLabel">Return Order</h5>
                            <button type="button" class="btn-close"
                                data-bs-dismiss="modal"
                                aria-label="Close"></button>
                        </div>
                        <form action="/user/orders/return/<%= order._id %>"
                            method="post">
                            <div class="modal-body">
                                <div class="mb-3">
                                    <label for="reason"
                                        class="form-label">Reason for
                                        Return:</label>
                                    <select name="reason" id="reason"
                                        class="form-select" required>
                                        <option value disabled selected>Select a
                                            reason</option>
                                        <option value="wrong_item">Wrong item
                                            received</option>
                                        <option value="defective">Item is
                                            defective</option>
                                        <option value="not_as_described">Item
                                            not as described</option>
                                        <option value="no_longer_needed">No
                                            longer needed</option>
                                        <option value="other">Other</option>
                                    </select>
                                    <textarea name="otherReason"
                                        id="otherReasonInput"
                                        class="form-control mt-2"
                                        placeholder="Enter other reason"
                                        style="display: none;"></textarea>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary"
                                    data-bs-dismiss="modal">Close</button>
                                <button type="submit"
                                    class="btn btn-primary">Submit Return
                                    Request</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <footer>
            <div class="container">
                <div class="footer-content">
                    <div class="footer-section">
                        <h3>About Us</h3>
                        <p>Trendy Kicks is your ultimate destination for stylish
                            and comfortable footwear. We bring you the latest
                            trends and timeless classics.</p>
                    </div>
                    <div class="footer-section">
                        <h3>Quick Links</h3>
                        <ul>
                            <li><a href="/">Home</a></li>
                            <li><a href="/products">Products</a></li>
                            <li><a href="/contact">Contact</a></li>
                        </ul>
                    </div>
                    <div class="footer-section">
                        <h3>Contact Us</h3>
                        <p>Email: info@trendykicks.com</p>
                        <p>Phone: (123) 456-7890</p>
                        <p>Address: 123 Shoe Street, Fashion City, FC 12345</p>
                    </div>
                    <div class="footer-section">
                        <h3>Follow Us</h3>
                        <div class="social-icons">
                            <a href="#" class="text-light"><i
                                    class="fab fa-facebook"></i></a>
                            <a href="#" class="text-light"><i
                                    class="fab fa-twitter"></i></a>
                            <a href="#" class="text-light"><i
                                    class="fab fa-instagram"></i></a>
                            <a href="#" class="text-light"><i
                                    class="fab fa-pinterest"></i></a>
                        </div>
                    </div>
                </div>
                <hr>
                <p class="text-center mt-4">© 2024 Trendy Kicks. All rights
                    reserved</p>
            </div>
        </footer>

        <script>
        window.orderData = {
            totalPrice: <%= order.totalPrice %>,
            orderId: '<%= order._id %>',
            status: '<%= order.status %>'
        };
    </script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
        <script>
        async function payNow() {
            console.log('clicked');
            const amount = window.orderData.totalPrice;
            console.log("Amount to pay:", amount);
            const response = await fetch('/api/create-order', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ amount, currency: 'INR', orderId: window.orderData.orderId, notes: {} })
            });
            const orderData = await response.json();
            console.log("Order Data:", orderData);
            const options = {
                key: 'rzp_test_ovddchQMnrblMK',
                amount: amount * 100,
                currency: 'INR',
                name: 'stridnest company',
                description: 'Test Transaction',
                order_id: orderData.razorpayOrderId,
                prefill: {
                    name: 'Lijo N S',
                    email: 'lijons13@gmail.com',
                    contact: '8921580213'
                },
                theme: {
                    color: '#F37254'
                },
                handler: function (response) {
                    verifyPayment(response, orderData.razorpayOrderId, orderData.orderId);
                }
            };
            console.log("Razorpay Options:", options);
            const rzp = new Razorpay(options);
            rzp.open();
        }

        function verifyPayment(response, razorpayOrderId, orderId) {
            fetch('/api/verify-paymenttwo', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    razorpay_order_id: razorpayOrderId,
                    razorpay_payment_id: response.razorpay_payment_id,
                    razorpay_signature: response.razorpay_signature,
                    order_id: orderId
                }),
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    window.location.href = `/checkout/order-confirmation/${orderId}`;
                } else {
                    alert('Payment Verification Failed: ' + data.message);
                }
            })
            .catch(err => {
                console.error('Error verifying payment:', err);
                alert('Error verifying payment. Please try again.');
            });
        }

        document.addEventListener('DOMContentLoaded', function() {
            const payNowButton = document.getElementById('payNowButton');
            if (payNowButton && window.orderData.status === 'payment_failed') {
                payNowButton.addEventListener('click', payNow);
            }
        });

        window.payNow = payNow;
    </script>
        <script>
        document.addEventListener('DOMContentLoaded', function () {
            const reasonSelect = document.getElementById('reason');
            const otherReasonInput = document.getElementById('otherReasonInput');
            if (reasonSelect) {
                reasonSelect.addEventListener('change', function () {
                    if (this.value === 'other') {
                        otherReasonInput.style.display = 'block';
                        otherReasonInput.setAttribute('required', 'required');
                    } else {
                        otherReasonInput.style.display = 'none';
                        otherReasonInput.removeAttribute('required');
                    }
                });
            }
        });

        document.querySelector('#returnOrderModal form').addEventListener('submit', function (e) {
            const reasonSelect = document.getElementById('reason');
            const otherReasonInput = document.getElementById('otherReasonInput');
            if (reasonSelect.value === 'other' && otherReasonInput.value.trim() === '') {
                e.preventDefault();
                alert('Please specify a reason for "Other".');
            }
        });
    </script>
        <script>
        document.addEventListener('DOMContentLoaded', function() {
            const cancelOrderBtn = document.getElementById('cancelOrderBtn');
            if (cancelOrderBtn) {
                cancelOrderBtn.addEventListener('click', function() {
                    Swal.fire({
                        title: 'Are you sure?',
                        text: "You won't be able to revert this!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, cancel it!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            fetch(`/user/orders/<%= order._id %>/cancel`, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                            })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    Swal.fire(
                                        'Cancelled!',
                                        'Your order has been cancelled.',
                                        'success'
                                    ).then(() => {
                                        window.location.reload();
                                    });
                                } else {
                                    Swal.fire(
                                        'Error!',
                                        'There was a problem cancelling your order. Please try again.',
                                        'error'
                                    );
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                Swal.fire(
                                    'Error!',
                                    'There was a problem cancelling your order. Please try again.',
                                    'error'
                                );
                            });
                        }
                    });
                });
            }
        });
    </script>
        <script>
        document.querySelectorAll('form[id^="cancelForm"]').forEach(form => {
            form.addEventListener('submit', function(event) {
                event.preventDefault();
                const formData = new FormData(this);
                fetch(this.action, {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: data.message,
                            confirmButtonText: 'OK'
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Oops!',
                            text: data.message,
                            confirmButtonText: 'OK'
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: 'Something went wrong. Please try again.',
                        confirmButtonText: 'OK'
                    });
                });
            });
        });
    </script>
        <script
            src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    </body>
</html>
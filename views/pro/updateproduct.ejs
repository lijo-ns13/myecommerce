<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Update Product</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link href="https://cdn.jsdelivr.net/npm/cropperjs@1.5.12/dist/cropper.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
        }
        .sidebar {
            height: 100vh;
            position: fixed;
            top: 0;
            left: 0;
            z-index: 100;
            width: 250px;
            background-color: #343a40;
            color: #fff;
            overflow-y: auto;
            transition: all 0.3s;
        }
        .sidebar .nav-link {
            color: #adb5bd;
            transition: all 0.3s;
            border-radius: 5px;
            margin: 5px 0;
        }
        .sidebar .nav-link:hover, .sidebar .nav-link.active {
            color: #fff;
            background-color: #495057;
        }
        .sidebar .nav-link.active {
            background-color: #007bff;
        }
        .content {
            margin-left: 250px;
            padding: 20px;
            min-height: 100vh;
            background-color: #f8f9fa;
        }
        #imagePreviewContainer {
            position: fixed;
            right: 0;
            top: 0;
            width: 400px;
            height: 100%;
            background-color: white;
            box-shadow: -2px 0 5px rgba(0,0,0,0.5);
            overflow-y: auto;
            padding: 15px;
            display: none;
        }
        #imagePreview {
            max-width: 100%;
        }
        .btn {
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div class="sidebar p-3">
        <h4 class="mb-4 text-center">Dashboard</h4>
        <ul class="nav flex-column">
            <li class="nav-item">
                <a class="nav-link" href="/admin/dashboard"><i class="fas fa-tachometer-alt me-2"></i>Dashboard</a>
            </li>
            <li class="nav-item">
                <a class="nav-link active" href="/admin/products"><i class="fas fa-box me-2"></i>Products</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/orders"><i class="fas fa-shopping-cart me-2"></i>Orders</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/category"><i class="fas fa-tags me-2"></i>Category</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/customers"><i class="fas fa-users me-2"></i>Customers</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/coupons"><i class="fas fa-ticket-alt me-2"></i>Coupons</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/banners"><i class="fas fa-image me-2"></i>Banners</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/offers"><i class="fas fa-gift me-2"></i>Offers</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/inventory"><i class="fas fa-warehouse me-2"></i>Inventory</a>
            </li>
            <li class="nav-item mt-auto">
                <a class="nav-link text-danger" href="/auth/logout"><i class="fas fa-sign-out-alt me-2"></i>Logout</a>
            </li>
        </ul>
    </div>


    <div class="content">
        <div class="container mt-5">
            <h2 class="mb-4">Update Product</h2>
            <div id="error"></div>
            <form id="productForm" action="/admin/products/edit-product/<%=product._id%>" method="POST" enctype="multipart/form-data">
                <div class="form-group">
                    <label for="product">Product Name</label>
                    <input type="text" class="form-control" id="product" name="product"  value="<%=product.product%>">
                </div>
                <div class="form-group">
                    <label for="brand">Brand</label>
                    <input type="text" class="form-control" id="brand" name="brand" value="<%=product.brand%>">
                </div>
                <div class="form-group">
                    <label for="description">Description</label>
                    <textarea class="form-control" id="description" name="description" rows="3"><%=product.description%></textarea>
                </div>
                <div class="form-group">
                    <label for="price">Price</label>
                    <input type="number" class="form-control" id="price" name="price" value="<%=product.price%>">
                </div>
                <div id="sizes-container">
                    <% if (product.sizes && product.sizes.length) { %>
                        <% product.sizes.forEach(function(size, index) { %>
                            <div class="size-group">
                                <input type="text" name="sizes[<%= index %>][size]" placeholder="Size" value="<%= size.size %>">
                                <input type="number" name="sizes[<%= index %>][stock]" placeholder="Stock" value="<%= size.stock %>">
                                <button type="button" class="remove-size-btn">Remove Size</button>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div class="size-group">
                            <input type="text" name="sizes[0][size]" placeholder="Size">
                            <input type="number" name="sizes[0][stock]" placeholder="Stock">
                            <button type="button" class="remove-size-btn">Remove Size</button>
                        </div>
                    <% } %>
                </div>
                <button type="button" id="add-size-btn">Add Size</button>
                <div class="form-group">
                    <label for="category">Category</label>
                    <select class="form-control" id="category" name="category">
                        <% categories.forEach(function(category) { %>
                            <option value="<%= category._id %>" <%= String(category._id) === String(product.category) ? 'selected' : '' %>><%= category.name %></option>
                        <% }) %>
                    </select>
                </div>
                
                <div class="form-group">
                    <label for="existingimages">Existing Images:</label>
                    <ul id="existingimages">
                        <% for (const image of product.images) { %>
                            <li>
                                <img src="<%= image.secured_url %>" alt="" style="max-width: 100px; margin-right: 10px;">
                                <button type="button" class="remove-image-btn" data-id="<%= image.id %>" data-product-id="<%= product._id %>">Remove</button>
                            </li>
                            
                        <% } %>
                    </ul>
                </div>
                
                <div class="form-group">
                    <label for="productImages">Product Images</label>
                    <input type="file" class="form-control-file" id="productImages" name="productImages" accept="image/*" multiple>
                    <small class="form-text text-muted">You can upload up to 5 images.</small>
                </div>
                <div id="imagePreviewContainer">
                    <img id="imagePreview" />
                    <button type="button" id="cropButton" class="btn btn-secondary mt-2">Crop Image</button>
                </div>
                <input type="hidden" id="croppedImages" name="croppedImages">
                <button type="submit" class="btn btn-primary">Edit Product</button>
            </form>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
document.querySelectorAll('.remove-image-btn').forEach(button => {
    button.addEventListener('click', function() {
        const imageItem = this.parentElement; // Get the <li> that contains the image
        const imageId = this.getAttribute('data-id'); // Get the image ID
        const productId = this.getAttribute('data-product-id'); // Get the product ID
        
        // Send a request to the server to delete the image from the product
        fetch(`/admin/delete-image/${productId}/${imageId}`, {
            method: 'DELETE', // Use DELETE method
            headers: {
                'Content-Type': 'application/json',
                // Include any necessary authentication tokens here
            },
        })
        .then(response => {
            if (response.ok) {
                imageItem.remove(); // Remove the image from the DOM if the deletion was successful
            } else {
                console.error('Failed to delete image');
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
    });
});

        document.getElementById('add-size-btn').addEventListener('click', () => {
            const container = document.getElementById('sizes-container');
            const sizeGroups = container.querySelectorAll('.size-group').length;
            
            const sizeGroup = document.createElement('div');
            sizeGroup.className = 'size-group';
            sizeGroup.innerHTML = `
                <input type="text" name="sizes[${sizeGroups}][size]" placeholder="Size" required>
                <input type="number" name="sizes[${sizeGroups}][stock]" placeholder="Stock" required>
                <button type="button" class="remove-size-btn">Remove Size</button>
            `;
            container.appendChild(sizeGroup);
        });

        document.getElementById('sizes-container').addEventListener('click', (event) => {
            if (event.target.classList.contains('remove-size-btn')) {
                event.target.parentElement.remove();
            }
        });

        document.getElementById('productForm').addEventListener('submit', async (event) => {
    event.preventDefault();

    const formData = new FormData(event.target);

    try {
        const response = await fetch('/admin/products/edit-product/<%=product._id%>?_method=PATCH', {
            method: 'PATCH',
            body: formData
        });

        const result = await response.json();
        if (response.ok) {
            // Display success message with SweetAlert
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: 'Product edited successfully!',
                confirmButtonText: 'OK'
            });
            // Clear form fields
            event.target.reset();
            document.getElementById('error').innerHTML=''
            setTimeout(() => {
                window.location.href='/admin/products';
            }, 2000);

        } else {
            // Display error message in the #error div
            document.getElementById('error').innerHTML = `<div class="alert alert-danger">${result.message}</div>`;
        }
    } catch (error) {
        console.error('Error:', error);
        document.getElementById('error').innerHTML = `<div class="alert alert-danger">An unexpected error occurred.</div>`;
    }
});

    </script>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/cropperjs@1.5.12/dist/cropper.min.js"></script>
    <script>
        const productImagesInput = document.getElementById('productImages');
        const imagePreviewContainer = document.getElementById('imagePreviewContainer');
        const imagePreview = document.getElementById('imagePreview');
        const croppedImagesInput = document.getElementById('croppedImages');
        const cropButton = document.getElementById('cropButton');
        let cropper;
        let croppedImagesArray = [];

        // Image upload and preview for cropping
        productImagesInput.addEventListener('change', function(event) {
            const files = event.target.files;

            if (files && files.length > 0) {
                const file = files[0];  // Crop first image only for now

                const reader = new FileReader();

                reader.onload = function(e) {
                    imagePreview.src = e.target.result;
                    imagePreviewContainer.style.display = 'block';

                    if (cropper) {
                        cropper.destroy();
                    }

                    cropper = new Cropper(imagePreview, {
                        aspectRatio: 1,
                        viewMode: 1,
                        autoCropArea: 1,
                        scalable: true
                    });
                };

                reader.readAsDataURL(file);
            }
        });

        // Convert data URL to Blob
        function dataURLToBlob(dataURL) {
            const [header, base64] = dataURL.split(',');
            const mime = header.split(':')[1].split(';')[0];
            const binary = atob(base64);
            const array = [];
            for (let i = 0; i < binary.length; i++) {
                array.push(binary.charCodeAt(i));
            }
            return new Blob([new Uint8Array(array)], { type: mime });
        }

        cropButton.addEventListener('click', function() {
            if (cropper) {
                const canvas = cropper.getCroppedCanvas();
                const croppedImageData = canvas.toDataURL('image/jpeg');

                // Add the base64 data URL to the array
                croppedImagesArray.push(croppedImageData);

                // Update the hidden input with the base64 data
                croppedImagesInput.value = JSON.stringify(croppedImagesArray);

                cropper.destroy();
                imagePreviewContainer.style.display = 'none';
            }
        });

        // Ensure cropped images are added before submitting
        document.getElementById('productForm').addEventListener('submit', function(event) {
            if (croppedImagesArray.length === 0) {
                alert('Please crop at least one image before submitting.');
                event.preventDefault();
            }
        });
    </script>
</body>
</html>
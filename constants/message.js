module.exports = {
  USER: {
    PRODUCTS_FETCHED: 'Products fetched successfully',
    PRODUCT_DETAILS_FETCHED: 'Product details fetched successfully',
    PRODUCTS_WITH_OFFERS: 'Products with offers fetched successfully',
  },
  CART: {
    PRODUCT_ADDED: 'Product added to cart',
    PRODUCT_NOT_IN_CART: 'Product not found in cart',
    PRODUCT_REMOVED: 'Product successfully removed from cart',
    QUANTITY_UPDATED: 'Quantity updated',
    QUANTITY_MIN_LIMIT: 'Cannot reduce quantity below 1',
    QUANTITY_MAX_LIMIT: 'Cannot add more than 5 units of this product',
    QUANTITY_STOCK_LIMIT: 'Not enough stock available',
    STOCK_UNAVAILABLE: 'No stock available for this size',
    PRODUCT_ID_SIZE_REQUIRED: 'Product ID and size are required',
    INVALID_ACTION: 'invalid action',
  },
  ADDRESS: {
    INVALID_PHONE: 'Invalid phone number',
    INVALID_POSTAL: 'Invalid postal code. Must be a 6-digit Indian postal code.',
    ADDRESS_NOT_FOUND: 'Address not found',
    UNAUTHORIZED_EDIT: 'You are not authorized to edit this address',
    ADD_SUCCESS: 'New address added successfully',
    UPDATE_SUCCESS: 'Address successfully updated',
    DELETE_SUCCESS: 'Address successfully deleted',
    INVALID_ID: 'Invalid address ID or user ID',
    DELETE_FAIL: 'Address not found or does not belong to the user',
  },
  AUTH: {
    FILL_ALL_FIELDS: 'Please fill in all fields',
    INVALID_EMAIL: 'Invalid email',
    INVALID_NAME: 'Invalid name',
    NAME_SHORT: 'At least 4 characters required for name',
    PASSWORD_MISMATCH: 'Passwords do not match',
    EMAIL_EXISTS: 'Email already exists',
    BLOCKED: 'Your account is temporarily blocked',
    USER_NOT_FOUND: 'User not found',
    INVALID_CREDENTIALS: 'User not found or password not matching',
    LOGIN_SUCCESS: 'Login successful',
    LOGIN_FAIL: 'Please provide valid credentials',
    OTP_SENT: 'OTP sent successfully',
    OTP_FAILED: 'Failed to send OTP',
    OTP_RESENT_FAILED: 'Failed to resend OTP',
    OTP_INCORRECT: 'OTP is incorrect',
    OTP_EXPIRED: 'OTP expired',
    REGISTER_SUCCESS: 'You have been successfully registered',
    RESET_LINK_SENT: 'Email sent successfully',
    RESET_LINK_FAIL: 'Error sending password reset email',
    TOKEN_INVALID: 'Invalid token or expired',
    PASSWORD_CONFIRM_FAIL: 'Password and confirm password do not match',
    PASSWORD_CHANGED: 'Password changed successfully',
    GENERAL_ERROR: 'Something went wrong',
    FAILURE: 'Failure',
    WEAK_PASSWORD:
      'Password must be at least 8 characters long and include uppercase, lowercase, number, and special character.',
  },
  PRODUCT: {
    ADD_SUCCESS: 'Product added successfully!',
    ADD_FAIL: 'Failed to add product',
    UPDATE_SUCCESS: 'Product updated successfully!',
    UPDATE_FAIL: 'Failed to update product',
    NOT_FOUND: 'Product not found',
    UNLIST_SUCCESS: 'Unlisted successfully',
    LIST_SUCCESS: 'Listed successfully',
    IMAGE_DELETE_SUCCESS: 'Image deleted successfully',
    IMAGE_DELETE_FAIL: 'Error deleting image',
    FILL_ALL_FIELDS: 'Please fill all fields',
    PRODUCT_NAME_INVALID: 'Product name should only contain letters, numbers',
    PRODUCT_NAME_SHORT: 'Product name atleast 4 characters',
    BRAND_NAME_INVALID: 'Brand name should only contain letters',
    BRAND_NAME_SHORT: 'Brand atleast have 4 characters',
    DESCRIPTION_SHORT: 'Description atleast have 8 characters',
    PRICE_INVALID: 'Price should be greater than zero',
    SIZE_REQUIRED: 'Add at least one size and stock',
    SIZE_POSITIVE: 'Size must be greater than 0',
    STOCK_POSITIVE: 'Stock must be 0 or greater',
    SIZES_ARRAY: 'Sizes must be an array.',
    INVALID_BASE_IMAGE: 'Invalid base64 image data',
    INVALID_BASE_IMAGE_FORMAT: 'Invalid base64 image data format',
    FAILED_SAVE_IMAGE: 'Failed to save image',
    VALID_NUMBER: "'Size and stock must be valid numbers.'",
  },
  ORDER: {
    FETCH_ORDERS: 'Error fetching orders',
    PAYMENT_FAILED_STATUS: 'Cannot change status of an order with payment_failed status',
    SIZE_NOT_FOUND: (size) => `Size ${size} not found for product`,
    ORDER_UPDATED: 'Order updated successfully',
    REFUND_SUCCESS: 'Refund processed successfully',
    RETURN_SUCCESS_SUBJECT: 'Order returned Successfully',
    RETURN_SUCCESS_BODY:
      'Your order returned successfully and payment will be credited to your wallet in a few days.',
    RETURN_REJECT_SUBJECT: 'Order return Failed',
    RETURN_REJECT_BODY: 'Your order return application was rejected because of irrelevant reason.',
    REFUND_SUBJECT: 'Amount Refunded Successfully',
    REFUND_BODY: (amount, orderId) =>
      `The refunded amount of $${amount} for Order #${orderId} has been credited to your wallet. Enjoy!`,
  },
  INVENTORY: {
    FETCH_ERROR: 'Error fetching inventory',
    PRODUCT_NOT_FOUND: 'Product not found',
    SIZE_NOT_FOUND: 'Size not found',
    UPDATE_ERROR: 'Failed to update stock',
    UPDATE_SUCCESS: 'Stock updated successfully',
  },
  CUSTOMER: {
    USER_NOT_FOUND: 'User not found',
    USER_BLOCKED_SUCCESS: 'User blocked successfully',
    USER_UNBLOCKED_SUCCESS: 'User unblocked successfully',
    CUSTOMERS_FETCH_ERROR: 'Error loading customers',
  },
  COUPON: {
    NOT_FOUND: 'Coupon not found',
    CODE_EXISTS: 'Coupon code already exists',
    REQUIRED_FIELDS: 'Please fill all fields',
    INVALID_CODE: 'Invalid coupon code. Only uppercase letters and numbers allowed.',
    INVALID_CODE_SIMPLE: 'Invalid coupon code and only alpha cap and num',
    INVALID_DISCOUNT: 'Discount value must be a valid number and cannot be negative',
    DISCOUNT_TOO_HIGH: 'Discount percentage must be less than 60',
    INVALID_MIN_PURCHASE: 'Minimum purchase amount cannot be less than 400',
    INVALID_USAGE_LIMIT: 'Usage limit should be greater than zero',
    INVALID_DATE: 'Invalid date format',
    END_DATE_PAST: 'End date must be in the future',
    END_DATE_BEFORE_START: 'End date must be after start date',
    INVALID_DISCOUNT_TYPE: 'Invalid discount type. Only "percentage" is allowed.',
    ADD_SUCCESS: 'Coupon added successfully',
    UPDATE_SUCCESS: 'Coupon updated successfully',
    DELETE_SUCCESS: 'Coupon deleted successfully',
  },
  BANNER: {
    IMAGE_REQUIRED: 'Image is required',
    CREATE_SUCCESS: 'Banner created successfully',
    DELETE_SUCCESS: 'Banner deleted successfully',
    NOT_FOUND: 'Banner not found',
  },
  CATEGORY: {
    NOT_FOUND: 'Category not found',
    UPDATE_SUCCESS: 'Category updated successfully',
    DELETE_SUCCESS: 'Category deleted successfully',
    BLOCK_SUCCESS: 'Category is Blocked',
    UNBLOCK_SUCCESS: 'Category is Unblocked',
    REQUIRED_FIELDS: 'Category and description are required',
    ALREADY_EXISTS: 'Category already exist',
    ADD_SUCCESS: 'Category added successfully',
    UPDATE_FAILED: 'Not updating and categoryId not found',
  },
  ERROR: {
    SERVER_ERROR: 'Server Error',
  },
  COMMON: {
    ORDER_NOT_FOUND: 'Order not found',
    USER_NOT_FOUND: 'User not found',
    PRODUCT_NOT_FOUND: 'Product not found',
    ALL_FIELDS_REQUIRED: 'All fields are required',
    UNAUTHORIZED: 'Unauthorized',
    CATEGORY_NOT_FOUND: 'Category not found',
    CART_NOT_FOUND: 'Cart not found',
    SIZE_NOT_FOUND: 'Size not found',
    MIN_CHAR: 'Minimum 3 character required',
    MAX_CHAR: 'Maximum 15 character required',
    MIN_MAX_CHAR: (field, min, max) => `${field} must be between ${min} and ${max} characters`,
    REQUIRED: (field) => `${field} is required`,
    INVALID: (field) => `${field} is invalid`,
  },
};
